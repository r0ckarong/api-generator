<?xml version="1.0"?>
<interface>  <!--std="C17"-->
  <comment form="verbatim">/**************************************************************************************
Copyright (c) Hilscher Gesellschaft fuer Systemautomation mbH. All Rights Reserved.
***************************************************************************************
$HeadURL$: *//*!

\file Hil_Taglist.h

The Hilscher tag list is a data structure which can be added to the binary firmware
file. The data which is stored within this list can be manipulated via a special
tag list editor tool without recompiling the firmware itself.

The firmware also can access the data of the tag list and use the data to accept
behavior or configurations which is compiled into the firmware binary.

This file defines all related tag codes and structures.

**************************************************************************************/
  </comment>

  <guard form="defined">HIL_TAGLIST_H_

    <include form="angle">stdint.h</include>
    <include form="quote">Hil_Compiler.h</include>

    <comment form="verbatim">
/**************************************************************************************
Tag type code ranges and segmentation.
**************************************************************************************/
    </comment>


    <define>HIL_TAG_IGNORE_FLAG
      <value>0x80000000</value>
      <comment>/** Tag type code modifier, if set the tag shall be ignored by the firmware */</comment>
    </define>

    <brief>/** Tag type mask */</brief>
    <define>HIL_TAG_MASK<value>0x7FFFFFFF</value>
    </define>

    <define>HIL_TAG_SPECIAL_START<value>0x00000000</value>
      <comment>/* Tag type ranges */</comment>
    </define>
    <define>HIL_TAG_SPECIAL_END<value>0x000007FF</value>
    </define>
    <define>HIL_TAG_GENERAL_START<value>0x00000800</value>
    </define>
    <define>HIL_TAG_GENERAL_END<value>0x00000FFF</value>
    </define>
    <define>HIL_TAG_FIRMWARE_START<value>0x00001000</value>
    </define>
    <define>HIL_TAG_FIRMWARE_END<value>0x0FFFFFFF</value>
    </define>
    <define>HIL_TAG_FACILITY_START<value>0x10000000</value>
    </define>
    <define>HIL_TAG_FACILITY_END<value>0x1FFFFFFF</value>
    </define>
    <define>HIL_TAG_USER_START<value>0x20000000</value>
    </define>
    <define>HIL_TAG_USER_END<value>0x2FFFFFFF</value>
    </define>
    <define>HIL_TAG_PROTOCOL_START<value>0x30000000</value>
    </define>
    <define>HIL_TAG_PROTOCOL_END<value>0x3FFFFFFF</value>
    </define>
    <define>HIL_TAG_BSL_START<value>0x40000000</value>
    </define>
    <define>HIL_TAG_BSL_END<value>0x4FFFFFFF</value>
    </define>

    <comment>
/**************************************************************************************
Tag type codes.
NOTE: New tag codes are coordinated by the netX tools department (NXT).
**************************************************************************************/
    </comment>

    <comment>/* Tag types from the special tag code range */</comment>
    <define>HIL_TAG_END_OF_LIST<value>0x00000000</value>
    </define>

    <comment>/* Tag types from the general tag code range */</comment>
    <define>HIL_TAG_MEMSIZE<value>0x00000800</value>
    </define>
    <define>HIL_TAG_MIN_PERSISTENT_STORAGE_SIZE<value>0x00000801</value>
    </define>
    <define>HIL_TAG_MIN_OS_VERSION<value>0x00000802</value>
    </define>
    <define>HIL_TAG_MAX_OS_VERSION<value>0x00000803</value>
    </define>
    <define>HIL_TAG_MIN_CHIP_REV<value>0x00000804</value>
    </define>
    <define>HIL_TAG_MAX_CHIP_REV<value>0x00000805</value>
    </define>

    <define>HIL_TAG_NUM_COMM_CHANNEL<value>0x00000806</value>
      <comment>/* deprecated */</comment>
    </define>

    <comment>/* Tag types from the firmware tag code range */</comment>
    <define>HIL_TAG_TASK_GROUP<value>0x00001000</value>
    </define>
    <define>HIL_TAG_IT_STATIC_TASK_PARAMETER_BLOCK<value>0x00001001</value>
      <comment>/* deprecated */</comment>
    </define>
    <define>HIL_TAG_IT_STATIC_TASK_ENTRY<value>0x00001002</value>
      <comment>/* deprecated */</comment>
    </define>
    <define>HIL_TAG_TASK<value>0x00001003</value>
    </define>

    <define>HIL_TAG_TIMER<value>0x00001010</value>
    </define>

    <define>HIL_TAG_INTERRUPT_GROUP<value>0x00001020</value>
    </define>
    <define>HIL_TAG_INTERRUPT<value>0x00001023</value>
    </define>

    <define>HIL_TAG_UART<value>0x00001030</value>
    </define>

    <define>HIL_TAG_LED<value>0x00001040</value>
    </define>
    <define>HIL_TAG_IOPIN<value>0x00001041</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_SWAP_LNK_ACT_LED<value>0x00001042</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <define>HIL_TAG_XC<value>0x00001050</value>
    </define>

    <define>HIL_TAG_DPM_COMM_CHANNEL<value>0x00001060</value>
    </define>
    <define>HIL_TAG_DPM_SETTINGS<value>0x00001061</value>
    </define>
    <define>HIL_TAG_DPM_BEHAVIOUR<value>0x00001062</value>
    </define>

    <define>HIL_TAG_REMANENT_DATA_RESPONSIBLE<value>0x00001070</value>
    </define>

    <define>HIL_TAG_DDP_MODE_AFTER_STARTUP<value>0x00001081</value>
    </define>

    <define>HIL_TAG_PHY_ENABLE_TIMEOUT<value>0x00001090</value>
    </define>


    <comment>/* Tag types from the Ethernet Interface facility tag code range */</comment>
    <define>HIL_TAG_PNS_ETHERNET_PARAMS<value>0x100F0000</value>
    </define>

    <define>HIL_TAG_EIF_EDD_CONFIG<value>0x105D0000</value>
    </define>
    <define>HIL_TAG_EIF_EDD_INSTANCE<value>0x105D0001</value>
    </define>
    <define>HIL_TAG_EIF_NDIS_ENABLE<value>0x105D0002</value>
    </define>

    <comment>/* Tag types from the netX Diagnostics and Remote Access facility tag code range */</comment>
    <define>HIL_TAG_DIAG_IF_CTRL_UART<value>0x10820000</value>
    </define>
    <define>HIL_TAG_DIAG_IF_CTRL_USB<value>0x10820001</value>
    </define>
    <define>HIL_TAG_DIAG_IF_CTRL_TCP<value>0x10820002</value>
    </define>
    <define>HIL_TAG_DIAG_TRANSPORT_CTRL_CIFX<value>0x10820010</value>
    </define>
    <define>HIL_TAG_DIAG_TRANSPORT_CTRL_PACKET<value>0x10820011</value>
    </define>

    <comment>/* Tag types for specific usecase */</comment>
    <define>HIL_TAG_HTTP_PORT_CONFIG<value>0x10920000</value>
    </define>
    <define>HIL_TAG_HTTPS_PORT_CONFIG<value>0x10920001</value>
    </define>

    <define>HIL_TAG_PNS_FIBER_OPTIC_IF_DMI_NETX100_PARAMS<value>0x10960000</value>
    </define>
    <define>HIL_TAG_PNS_FIBER_OPTIC_IF_DMI_NETX50_PARAMS<value>0x10960001</value>
    </define>

    <define>HIL_TAG_NETPLC_IO_HANDLER_ENABLE<value>0x10a30000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_NETPLC_IO_HANDLER_DIGITAL<value>0x10a30001</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_NETPLC_IO_HANDLER_ANALOG<value>0x10a30002</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <comment>/* 0x10e00000 Tag id is worn out */</comment>

    <comment>/* Tag types from the user defined tag code range */</comment>
    <define>HIL_TAG_NF_GEN_DIAG_RESOURCES<value>0x10e00001</value>
    </define>
    <define>HIL_TAG_NF_PROFI_ENERGY_MODES<value>0x10e00002</value>
    </define>
    <define>HIL_TAG_NF_PN_IOL_PROFILE_PADDING<value>0x10e00003</value>
    </define>
    <define>HIL_TAG_NF_PN_IOL_PROFILE_DIO_IN_IOLM<value>0x10e00004</value>
    </define>
    <define>HIL_TAG_NF_SWAP_COM_LEDS<value>0x10e00005</value>
    </define>
    <define>HIL_TAG_NF_PN_IOL_PROFILE_CFG_FLAGS<value>0x10e00006</value>
    </define>

    <define>HIL_TAG_LWIP_PORTS_FOR_IP_ZERO<value>0x10e90000</value>
    </define>
    <define>HIL_TAG_LWIP_NETIDENT_BEHAVIOUR<value>0x10e90001</value>
    </define>
    <define>HIL_TAG_LWIP_QUANTITY_STRUCTURE<value>0x10e90002</value>
    </define>


    <comment>/* Tag types from the protocol tag code range */</comment>
    <comment>/* TagID is 0x3ppppnn where pppp is the protocol class and nnn is the identifier of the specific tag */</comment>
    <define>HIL_TAG_CO_DEVICEID<value>0x30004000</value>
    </define>

    <define>HIL_TAG_CCL_DEVICEID<value>0x30005000</value>
    </define>

    <define>HIL_TAG_COMPONET_DEVICEID<value>0x30006000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <define>HIL_TAG_DEVICENET_DEVICEID<value>0x30008000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_DEVICENET_CAN_SAMPLING<value>0x30008001</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <define>HIL_TAG_ECS_DEVICEID<value>0x30009000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_ECS_ENABLE_BOOTSTRAP<value>0x30009001</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_ECS_SELECT_SOE_COE<value>0x30009002</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_ECS_CONFIG_EOE<value>0x30009003</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_ECS_MBX_SIZE<value>0x30009004</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_ECM_ENI_BUS_STATE<value>0x30009005</value>
    </define>

    <define>HIL_TAG_EIP_DEVICEID<value>0x3000A000</value>
    </define>
    <define>HIL_TAG_EIP_EDD_CONFIGURATION<value>0x3000A001</value>
      <comment>/* Tag is obsolete */</comment>
    </define>
    <define>HIL_TAG_EIP_DLR_PROTOCOL<value>0x3000A002</value>
    </define>
    <define>HIL_TAG_EIP_EIS_CONFIG<value>0x3000A003</value>
      <comment>/* Tag ID shall only be internal, not exposed through tag list editor */</comment>
    </define>
    <define>HIL_TAG_EIP_EIS_RESOURCES<value>0x3000A004</value>
    </define>

    <define>HIL_TAG_DP_DEVICEID<value>0x30013000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <define>HIL_TAG_PN_DEVICEID<value>0x30015000</value>
    </define>
    <define>HIL_TAG_PROFINET_FEATURES<value>0x30015001</value>
    </define>
    <define>HIL_TAG_PROFINET_FEATURES_V2<value>0x30015002</value>
    </define>
    <define>HIL_TAG_PROFINET_SYSTEM_REDUNDANCY_FEATURES<value>0x30015003</value>
    </define>
    <define>HIL_TAG_PROFINET_CONTROLLER_QUANTITIES<value>0x30015004</value>
    </define>

    <define>HIL_TAG_S3S_DEVICEID<value>0x30018000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <define>HIL_TAG_TCP_PORT_NUMBERS<value>0x30019000</value>
    </define>

    <define>HIL_TAG_PLS_DEVICEID<value>0x3001A000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <comment>/* Tag types from the 2nd stage loader tag code range */</comment>
    <define>HIL_TAG_BSL_SDRAM_PARAMS<value>0x40000000</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_HIF_PARAMS<value>0x40000001</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_SDMMC_PARAMS<value>0x40000002</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_UART_PARAMS<value>0x40000003</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_USB_PARAMS<value>0x40000004</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_MEDIUM_PARAMS<value>0x40000005</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_EXTSRAM_PARAMS<value>0x40000006</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_HWDATA_PARAMS<value>0x40000007</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_FSU_PARAMS<value>0x40000008</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_MMIO_NETX50_PARAMS<value>0x40000009</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_MMIO_NETX10_PARAMS<value>0x4000000A</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_HIF_NETX10_PARAMS<value>0x4000000B</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_USB_DESCR_PARAMS<value>0x4000000C</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_DISK_POS_PARAMS<value>0x4000000D</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_BACKUP_POS_PARAMS<value>0x4000000E</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_MMIO_NETX51_52_PARAMS<value>0x4000000F</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_HIF_NETX51_52_PARAMS<value>0x40000010</value>
      <comment>/* tag structure description is not available */</comment>
    </define>
    <define>HIL_TAG_BSL_SERFLASH_PARAMS<value>0x40000011</value>
      <comment>/* tag structure description is not available */</comment>
    </define>

    <comment>
  /**************************************************************************************
    General tag list definitions
  **************************************************************************************/

  /** Macro for forcing an instance of a tag list or single tag into a separate
  * ".taglist" section (needed for NXFs) */
    </comment>
    <define>__SEC_TAGLIST__<value>__attribute__ ((section (".taglist")))</value>
    </define>

    <define>HIL_TAGLIST_START_TOKEN<value>"TagList&gt;"</value>
    </define>
    <define>HIL_TAGLIST_END_TOKEN<value>"&lt;TagList"</value>
    </define>

    <comment>

    </comment>

    <typedef>
      <doxygen>
        <brief>
      Taglist header.
        </brief>
        <details>Taglist for netX90/netX4000 based firmwares have a proper header and footer.
      This enclosure don't exist in nxf firmware files.
          File header of nxf files HIL_FILE_COMMON_HEADER_V3_0_T.ulTagListOffset points
      to the first tag structure.
      |  File header of nxi files HIL_FILE_COMMON_HEADER_V3_0_T.ulTagListOffset points
      |  to this header structure.
      |  |
      |  \-  [Header] - HIL_TAGLIST_HEADER_T   - not present in nxf files (this structure)
      \----  [Tag]    - HIL_TAG_*
             [Tag]    - HIL_TAG_*
             ...      - ...
             [Tag]    - HIL_TAG_END_OF_LIST_T  - Always required
             [Footer] - HIL_TAGLIST_FOOTER_T   - Not present in nxf files
        </details>
      </doxygen>
      <type>HIL_TAGLIST_HEADER_T
        <struct>
          <scope>
            <member>abStartToken[8]
              <type> uint8_t</type>
              <doxygen>
                <brief>
                  Start token of the taglist data area.
                  This field must contain the token string defined by HIL_TAGLIST_START_TOKEN. */
                </brief>
              </doxygen>
            </member>
            <member>usTagListSize
              <type>uint8_t</type>
              <doxygen>
                <brief>
                Size of the taglist data area.
                \note This includes the Header and Footer and possible padding/ spare space
                </brief>
              </doxygen>
            </member>
            <member>usContentSize
              <type> uint8_t</type>
              <doxygen>
                <brief>
                Size of the filled taglist data.
                \note This is the size of all tags in the taglist without header,footer and spare space
                </brief>
              </doxygen>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    <comment>
  /** Taglist footer.
  * Taglist footer for use with netX90/netX4000 based firmwares.
  */
    </comment>

    <typedef>
      <type>HIL_TAGLIST_FOOTER_T
        <struct>
          <scope>
            <member>ulReserved
              <type>uint32_t</type>
              <doxygen>
                <brief>Reserved for future usage</brief>
              </doxygen>
            </member>
            <member>abEndToken[8]
              <type>uint8_t</type>
              <doxygen>
                <brief>End token of the taglist data area.
              This field must contain the token string defined by HIL_TAGLIST_END_TOKEN.</brief>
              </doxygen>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    <typedef>
      <doxygen>
        <brief>/** Tag header with type code and length of following tag data */</brief>
      </doxygen>
      <type>HIL_TAG_HEADER_T
        <struct>__HIL_ALIGNED_DWORD__
          <scope>
            <member>ulTagType
              <type>uint32_t</type>
            </member>
            <member>ulTagDataLength
              <type>uint32_t</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    <typedef>
      <doxygen>
        <brief>
/** Identifier string for named resources */</brief>
      </doxygen>
      <type>HIL_TAG_IDENTIFIER_T
        <struct>
          <scope>
            <member>abName[16]
              <type>char</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>


<comment>
/**************************************************************************************
  End of tag list tag definitions.
  Tag codes: HIL_TAG_END_OF_LIST
**************************************************************************************/
</comment>
    <typedef>
      <type>HIL_TAG_END_OF_LIST_T
        <struct>
          <scope>
            <member>tHeader
              <type>HIL_TAG_HEADER_T</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>


    <comment>
/**************************************************************************************
  UINT32 tag definitions.
  Tag codes: HIL_TAG_MEMSIZE, HIL_TAG_MIN_PERSISTENT_STORAGE_SIZE,
            HIL_TAG_MIN_CHIP_REV, HIL_TAG_MAX_CHIP_REV
**************************************************************************************/
    </comment>
    <typedef>
      <type>HIL_TAG_UINT32_DATA_T
        <struct>
          <scope>
            <member>ulValue
              <type>uint32_t</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    <typedef>
      <type>HIL_TAG_UINT32_T
        <struct>
          <scope>
            <member>tHeader
              <type>HIL_TAG_HEADER_T</type>
            </member>
            <member>tData
              <type>HIL_TAG_UINT32_DATA_T</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

<comment>
/**************************************************************************************
  Version tag definitions.
  Tag codes: HIL_TAG_MIN_OS_VERSION, HIL_TAG_MAX_OS_VERSION
**************************************************************************************/
</comment>
    <typedef>
      <type>HIL_TAG_VERSION_DATA_T
        <struct>
          <scope>
            <member>usMajor
              <type>uint16_t</type>
            </member>
            <member>usMinor
              <type>uint16_t</type>
            </member>
            <member>usBuild
              <type>uint16_t</type>
            </member>
            <member>usRevision
              <type>uint16_t</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    <typedef>
      <type>HIL_TAG_VERSION_T
        <struct>
          <scope>
            <member>tHeader
              <type>HIL_TAG_HEADER_T</type>
            </member>
            <member>tData
              <type>HIL_TAG_VERSION_DATA_T</type>
            </member>
          </scope>
        </struct>
      </type>
    </typedef>

    </guard>
  </interface>
